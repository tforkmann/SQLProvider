<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <OutputType>Exe</OutputType>
    <TargetFramework>netcoreapp2.0</TargetFramework>
    <!--TargetFrameworks>netcoreapp2.0;netstandard2.0</TargetFrameworks-->
	<DotnetFscCompilerPath></DotnetFscCompilerPath>
  </PropertyGroup>
  <!-- FSharp config -->
  <PropertyGroup>
    <IsWindows Condition="'$(OS)' == 'Windows_NT'">true</IsWindows>
  </PropertyGroup>
  <PropertyGroup Condition="'$(MSBuildRuntimeType)' == 'Core'">
    <IsOSX Condition="'$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::OSX)))' == 'true'">true</IsOSX>
    <IsLinux Condition="'$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::Linux)))' == 'true'">true</IsLinux>
  </PropertyGroup>
  <PropertyGroup Condition="'$(IsWindows)' == 'true'">
    <!-- Your path of full .NET Framework FSC compiler. -->
    <!-- <FscToolPath>C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\Common7\IDE\CommonExtensions\Microsoft\FSharp</FscToolPath> -->
    <FscToolPath>C:\Program Files (x86)\Microsoft SDKs\F#\4.1\Framework\v4.0</FscToolPath>
    <FscToolExe>fsc.exe</FscToolExe>
  </PropertyGroup>
  <PropertyGroup Condition="'$(IsOSX)' == 'true'">
    <FscToolPath>/Library/Frameworks/Mono.framework/Versions/Current/Commands</FscToolPath>
    <FscToolExe>fsharpc</FscToolExe>
  </PropertyGroup>
  <PropertyGroup Condition="'$(IsLinux)' == 'true'">
    <FscToolPath>/usr/bin</FscToolPath>
    <FscToolExe>fsharpc</FscToolExe>
  </PropertyGroup>
  <!-- /FSharp config -->
  <ItemGroup>
    <Compile Include="Program.fs" />
  </ItemGroup>
  <!-- .NET 4.61 is Net Standard 2.0 compatible so use what ever libraries.
      However non-Windows typeprovider will call Mono on compile-time. Mono is not Net Standard 2.0 compatible.
      So Mono will use Net 4.5.1 libraries. Typeprovider handles that on compilation, and after compile your 
      assembly will ve .NET Core compatible. -->
  <ItemGroup><!-- Mono fix -->
    <Reference Condition="'$(IsWindows)' != 'true' Or '$(TargetFramework)' == 'netstandard2.0'" Include="FSharp.Data.SqlProvider">
      <HintPath>../../../bin/net451/FSharp.Data.SqlProvider.dll</HintPath>
      <!--HintPath>../../packages/SQLProvider/lib/net451/FSharp.Data.SqlProvider.dll</HintPath-->
    </Reference>
  </ItemGroup>
  <ItemGroup>
    <PackageReference Include="Npgsql" Version="3.2.5" /><!-- this will add the runtime coreapp version -->
    <PackageReference Condition="'$(IsWindows)' == 'true' And '$(TargetFramework)' != 'netstandard2.0'" Include="SQLProvider" Version="1.1.79" />
    <PackageReference Include="System.Console" Version="4.3.1" />
    <PackageReference Include="System.Data.Common" Version="4.3.0" />
    <PackageReference Include="System.Runtime" Version="4.3.0" />
    <PackageReference Include="System.Runtime.Extensions" Version="4.3.0" />
    <PackageReference Include="System.Reflection" Version="4.3.0" />
    <PackageReference Include="System.Reflection.TypeExtensions" Version="4.7.0" />
    <PackageReference Include="System.Runtime.Serialization.Formatters" Version="4.3.0" />
    <PackageReference Include="System.Threading.Tasks.Extensions" Version="4.4.0" />
  </ItemGroup>
  <Target Name="CopyLibrariesWin">
    <Exec Command="xcopy ..\..\..\packages\scripts\Npgsql\lib\netstandard2.0\Npgsql.dll temp\ /y" />
    <Exec Command="xcopy ..\..\..\packages\scripts\System.Threading.Tasks.Extensions\lib\netstandard2.0\System.Threading.Tasks.Extensions.dll temp\ /y" />
    <Exec Command="xcopy ..\..\..\packages\System.Data.Common\lib\netstandard1.2\System.Data.Common.dll temp\ /y" />
  </Target>
  <Target Name="CopyLibrariesNonWin">
    <Exec Command="mkdir -p temp" />
    <Exec Command="cp ../../../packages/scripts/Npgsql/lib/net451/Npgsql.dll temp/ " />
    <Exec Command="cp ../../../packages/scripts/System.Threading.Tasks.Extensions/lib/portable-net45+win8+wp8+wpa81/System.Threading.Tasks.Extensions.dll temp/ " />
  </Target>
  <Target Name="PreBuild" BeforeTargets="PreBuildEvent">
    <CallTarget Targets="CopyLibrariesWin" Condition="'$(IsWindows)' == 'true'"/>
    <CallTarget Targets="CopyLibrariesNonWin" Condition="'$(IsWindows)' != 'true'"/>
  </Target>
</Project>