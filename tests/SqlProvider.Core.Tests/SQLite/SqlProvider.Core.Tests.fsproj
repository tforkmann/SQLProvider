<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <OutputType>Exe</OutputType>
    <TargetFramework>netcoreapp2.0</TargetFramework>
    <!--TargetFrameworks>netcoreapp2.0;netstandard2.0</TargetFrameworks-->
  </PropertyGroup>
  <!-- FSharp config -->
  <PropertyGroup>
    <IsWindows Condition="'$(OS)' == 'Windows_NT'">true</IsWindows>
  </PropertyGroup>
  <PropertyGroup Condition="'$(MSBuildRuntimeType)' == 'Core'">
    <IsOSX Condition="'$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::OSX)))' == 'true'">true</IsOSX>
    <IsLinux Condition="'$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::Linux)))' == 'true'">true</IsLinux>
  </PropertyGroup>
  <PropertyGroup Condition="'$(IsWindows)' == 'true'">
    <FscToolPath>C:\Program Files (x86)\Microsoft SDKs\F#\4.1\Framework\v4.0</FscToolPath>
    <FscToolExe>fsc.exe</FscToolExe>
  </PropertyGroup>
  <PropertyGroup Condition="'$(IsOSX)' == 'true'">
    <FscToolPath>/Library/Frameworks/Mono.framework/Versions/Current/Commands</FscToolPath>
    <FscToolExe>fsharpc</FscToolExe>
  </PropertyGroup>
  <PropertyGroup Condition="'$(IsLinux)' == 'true'">
    <FscToolPath>/usr/bin</FscToolPath>
    <FscToolExe>fsharpc</FscToolExe>
  </PropertyGroup>
  <!-- /FSharp config -->
  <ItemGroup>
    <Compile Include="Program.fs" />
  </ItemGroup>
  <!-- .NET 4.61 is Net Standard 2.0 compatible so use what ever libraries.
      However non-Windows typeprovider will call Mono on compile-time. Mono is not Net Standard 2.0 compatible.
      So Mono will use Net 4.5.1 libraries. Typeprovider handles that on compilation, and after compile your 
      assembly will ve .NET Core compatible. -->
  <ItemGroup><!-- Mono fix -->
    <Reference Condition="'$(IsWindows)' != 'true' Or '$(TargetFramework)' == 'netstandard2.0'" Include="FSharp.Data.SqlProvider">
      <HintPath>../../../bin/net451/FSharp.Data.SqlProvider.dll</HintPath>
    </Reference>
  </ItemGroup>  
  <ItemGroup>
    <PackageReference Include="SQLitePCLRaw.bundle_green" Version="1.1.8" />
    <PackageReference Condition="'$(IsWindows)' == 'true' And '$(TargetFramework)' != 'netstandard2.0'" Include="SQLProvider" Version="1.1.26" />
    <PackageReference Include="System.Console" Version="4.3.0" />
    <PackageReference Include="System.Data.SqlClient" Version="4.4.0" />
    <PackageReference Include="System.Runtime" Version="4.3.0" />
    <PackageReference Include="System.Runtime.Extensions" Version="4.3.0" />
    <PackageReference Include="System.Reflection" Version="4.3.0" />
    <PackageReference Include="System.Reflection.TypeExtensions" Version="4.4.0" />
    <PackageReference Include="System.Runtime.Serialization.Formatters" Version="4.3.0" />
  </ItemGroup>
  <Target Name="CopyLibrariesWin">
    <!-- Note also the physical architecture (x86/x64/arm) of SQLitePCLRaw.lib.e_sqlite3 Win: -->
    <Exec Command="xcopy ..\..\..\packages\standard\SQLitePCLRaw.provider.e_sqlite3.netstandard11\lib\netstandard1.1\SQLitePCLRaw.provider.e_sqlite3.dll temp\ /y" />
    <Exec Command="xcopy ..\..\..\packages\standard\SQLitePCLRaw.core\lib\netstandard1.1\SQLitePCLRaw.core.dll temp\ /y" />
    <Exec Command="xcopy ..\..\..\packages\standard\SQLitePCLRaw.lib.e_sqlite3.v110_xp\runtimes\win7-x86\native\e_sqlite3.dll temp\ /y" />
    <Exec Command="xcopy ..\..\..\packages\standard\SQLitePCLRaw.bundle_green\lib\netcoreapp\SQLitePCLRaw.batteries_green.dll temp\ /y" />
    <Exec Command="xcopy ..\..\..\packages\standard\SQLitePCLRaw.bundle_green\lib\netcoreapp\SQLitePCLRaw.batteries_v2.dll temp\ /y" />
    <Exec Command="xcopy ..\..\..\packages\standard\Microsoft.Data.Sqlite.Core\lib\netstandard2.0\Microsoft.Data.Sqlite.dll temp\ /y" />
  </Target>
  <Target Name="CopyLibrariesNonWin">
    <Exec Command="mkdir -p temp" />
    <Exec Condition="'$(IsOSX)' == 'true'" Command="cp ../../../packages/standard/SQLitePCLRaw.lib.e_sqlite3.osx/runtimes/osx-x64/native/libe_sqlite3.dylib temp/ " />
    <!-- Note also the physical architecture (x86/x64/arm) of SQLitePCLRaw.lib.e_sqlite3 Linux: -->
    <Exec Condition="'$(IsLinux)' == 'true'" Command="cp ../../../packages/standard/SQLitePCLRaw.lib.e_sqlite3.linux/runtimes/linux-x86/native/libe_sqlite3.so temp/ " />
    <Exec Command="cp ../../../packages/standard/SQLitePCLRaw.bundle_green/lib/netstandard1.1/SQLitePCLRaw.batteries_green.dll temp/ " />
    <Exec Command="cp ../../../packages/scripts/SQLitePCLRaw.core/lib/net45/SQLitePCLRaw.core.dll temp/ " />
    
    <Exec Command="cp ../../../packages/scripts/Microsoft.Data.Sqlite.Core.Backport/lib/net45/Microsoft.Data.Sqlite.dll temp/ " />
  </Target>
  <Target Name="PreBuild" BeforeTargets="PreBuildEvent">
    <CallTarget Targets="CopyLibrariesWin" Condition="'$(IsWindows)' == 'true'"/>
    <CallTarget Targets="CopyLibrariesNonWin" Condition="'$(IsWindows)' != 'true'"/>
  </Target>
</Project>