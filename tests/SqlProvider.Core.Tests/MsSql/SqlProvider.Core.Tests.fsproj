<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <OutputType>Exe</OutputType>
    <!--TargetFramework>netcoreapp2.0</TargetFramework-->
    <TargetFrameworks>netcoreapp2.0;netstandard2.0</TargetFrameworks>
  </PropertyGroup>
  <!-- FSharp config -->
  <PropertyGroup>
    <IsWindows Condition="'$(OS)' == 'Windows_NT'">true</IsWindows>
  </PropertyGroup>
  <PropertyGroup Condition="'$(MSBuildRuntimeType)' == 'Core'">
    <IsOSX Condition="'$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::OSX)))' == 'true'">true</IsOSX>
    <IsLinux Condition="'$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::Linux)))' == 'true'">true</IsLinux>
  </PropertyGroup>  
  <PropertyGroup Condition="'$(IsWindows)' == 'true'">
    <FscToolPath>C:\Program Files (x86)\Microsoft SDKs\F#\4.1\Framework\v4.0</FscToolPath>
    <FscToolExe>fsc.exe</FscToolExe>
  </PropertyGroup>
  <PropertyGroup Condition="'$(IsOSX)' == 'true'">
    <FscToolPath>/Library/Frameworks/Mono.framework/Versions/Current/Commands</FscToolPath>
    <FscToolExe>fsharpc</FscToolExe>
  </PropertyGroup>
  <PropertyGroup Condition="'$(IsLinux)' == 'true'">
    <FscToolPath>/usr/bin</FscToolPath>
    <FscToolExe>fsharpc</FscToolExe>
  </PropertyGroup>
  <!-- /FSharp config -->
  <!-- .NET 4.61 is Net Standard 2.0 compatible so use what ever libraries.
      However non-Windows typeprovider will call Mono on compile-time. Mono is not Net Standard 2.0 compatible.
      So Mono will use Net 4.5.1 libraries. Typeprovider handles that on compilation, and after compile your 
      assembly will ve .NET Core compatible. -->
  <ItemGroup><!-- Mono fix -->
    <Reference Condition="'$(IsWindows)' != 'true'" Include="FSharp.Data.SqlProvider">
      <HintPath>../../../bin/net451/FSharp.Data.SqlProvider.dll</HintPath>
    </Reference>
  </ItemGroup>  
  <ItemGroup>
    <Compile Include="Program.fs" />
  </ItemGroup>
  <ItemGroup>
    <Reference Condition="'$(IsWindows)' != 'true'" Include="FSharp.Data.SqlProvider">
      <HintPath>../../../bin/net451/FSharp.Data.SqlProvider.dll</HintPath>
      <!--HintPath>../../packages/SQLProvider/lib/net451/FSharp.Data.SqlProvider.dll</HintPath-->
    </Reference>
  </ItemGroup>  
  <ItemGroup>
    <PackageReference Condition="'$(IsWindows)' == 'true'" Include="SQLProvider" Version="1.1.22" />
    <PackageReference Include="System.Console" Version="4.3.0" />
    <PackageReference Include="System.Data.SqlClient" Version="4.4.0" />
    <PackageReference Include="System.Runtime" Version="4.3.0" />
    <PackageReference Include="System.Runtime.Extensions" Version="4.3.0" />
    <PackageReference Include="System.Reflection" Version="4.3.0" />
    <PackageReference Include="System.Reflection.TypeExtensions" Version="4.4.0" />
    <PackageReference Include="System.Runtime.Serialization.Formatters" Version="4.3.0" />
  </ItemGroup>
  <Target Name="PostBuild" AfterTargets="PostBuildEvent">
    <Exec Command="copy ..\..\..\packages\System.Data.SqlClient\runtimes\win\lib\netstandard2.0\System.Data.SqlClient.dll bin\Debug\netcoreapp2.0\" Condition="'$(IsWindows)' == 'true'" />
    <Exec Command="cp ../../../packages/System.Data.SqlClient/runtimes/unix/lib/netstandard2.0/System.Data.SqlClient.dll bin/Debug/netcoreapp2.0/" Condition="'$(IsWindows)' != 'true'" />
  </Target>
</Project>